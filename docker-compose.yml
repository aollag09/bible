# docker-compose.yml
version: '3'
services:

  # DATABASE 
  database:
    # Use latest oicial mysql version
    image: "mysql:8.0.19"
    container_name: database

    environment:
      # Configure MySQL environment
      MYSQL_DATABASE: 'bible'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'bible_user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'docker'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'docker'

    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
    volumes:
      # Persist data even if container shuts down
      - database-data:/var/lib/postgresql/data/bible

      # Initialization db schema scripts
      - ./deployment/mysql/schema/bible_init.sql:/docker-entrypoint-initdb.d/bible_init.sql
      - ./deployment/mysql/schema/bible_version_key.sql:/docker-entrypoint-initdb.d/bible_version_key.sql
      - ./deployment/mysql/schema/key_abbreviations.sql:/docker-entrypoint-initdb.d/key_abbreviations.sql
      - ./deployment/mysql/schema/key_english.sql:/docker-entrypoint-initdb.d/key_english.sql
      - ./deployment/mysql/schema/key_genre_english.sql:/docker-entrypoint-initdb.d/key_genre_english.sql

      # Db Data (prefix with z to ensure this import is done after the schema
      - ./deployment/mysql/data/ar_svd.sql:/docker-entrypoint-initdb.d/z_ar_svd.sql
      - ./deployment/mysql/data/de_schlachter.sql:/docker-entrypoint-initdb.d/z_de_schlachter.sql
      - ./deployment/mysql/data/el_greek.sql:/docker-entrypoint-initdb.d/z_el_greek.sql
      - ./deployment/mysql/data/en_asv.sql:/docker-entrypoint-initdb.d/z_en_asv.sql
      - ./deployment/mysql/data/en_bbe.sql:/docker-entrypoint-initdb.d/z_en_bbe.sql
      - ./deployment/mysql/data/en_dby.sql:/docker-entrypoint-initdb.d/z_en_dby.sql
      - ./deployment/mysql/data/en_kjv.sql:/docker-entrypoint-initdb.d/z_en_kjv.sql
      - ./deployment/mysql/data/en_wbt.sql:/docker-entrypoint-initdb.d/z_en_wbt.sql
      - ./deployment/mysql/data/en_web.sql:/docker-entrypoint-initdb.d/z_en_web.sql
      - ./deployment/mysql/data/en_ylt.sql:/docker-entrypoint-initdb.d/z_en_ylt.sql
      - ./deployment/mysql/data/eo_esperanto.sql:/docker-entrypoint-initdb.d/z_eo_esperanto.sql
      - ./deployment/mysql/data/es_rvr.sql:/docker-entrypoint-initdb.d/z_es_rvr.sql
      - ./deployment/mysql/data/fi_finnish.sql:/docker-entrypoint-initdb.d/z_fi_finnish.sql
      - ./deployment/mysql/data/fi_pr.sql:/docker-entrypoint-initdb.d/z_fi_pr.sql
      - ./deployment/mysql/data/fr_apee.sql:/docker-entrypoint-initdb.d/z_fr_apee.sql
      - ./deployment/mysql/data/ko_ko.sql:/docker-entrypoint-initdb.d/z_ko_ko.sql
      - ./deployment/mysql/data/pt_aa.sql:/docker-entrypoint-initdb.d/z_pt_aa.sql
      - ./deployment/mysql/data/pt_acf.sql:/docker-entrypoint-initdb.d/z_pt_acf.sql
      - ./deployment/mysql/data/pt_nvi.sql:/docker-entrypoint-initdb.d/z_pt_nvi.sql
      - ./deployment/mysql/data/ro_cornilescu.sql:/docker-entrypoint-initdb.d/z_ro_cornilescu.sql
      - ./deployment/mysql/data/ru_synodal.sql:/docker-entrypoint-initdb.d/z_ru_synodal.sql
      - ./deployment/mysql/data/vi_vietnamese.sql:/docker-entrypoint-initdb.d/z_vi_vietnamese.sql
      - ./deployment/mysql/data/zh_cuv.sql:/docker-entrypoint-initdb.d/z_zh_cuv.sql
      - ./deployment/mysql/data/zh_ncv.sql:/docker-entrypoint-initdb.d/z_zh_ncv.sql
    networks:
      - bible-net

  # INDEX 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms1G -Xmx1G"
      - "xpack.security.enabled=false"
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=*"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - bible-net
  
  # KIBANA, DATA VISUALIZATION
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.2
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - bible-net
  
  # LOGSTASH, DATA INTEGRATION
  logstash:
    build: deployment/logstash/
    container_name: logstash
    volumes:
      - './deployment/logstash/config:/usr/share/logstash/config'
      - './deployment/logstash/pipelines:/usr/share/logstash/pipelines'
      #- './deployment/logstash/lastrun:/root/.logstash_jdbc_last_run'
    ports:
      - '5001:5001'
    environment:
      LS_JAVA_OPTS: '-Xmx1g -Xms1g'
    env_file:
      - .env
    networks:
      - bible-net
    depends_on:
      - elasticsearch
      - database

volumes:
  # database volume
  database-data: 

  # index volumes
  elasticsearch-data:
    driver: local

networks:
  bible-net:
    driver: bridge
